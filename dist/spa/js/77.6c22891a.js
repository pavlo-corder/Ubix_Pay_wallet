"use strict";(self["webpackChunkubix"]=self["webpackChunkubix"]||[]).push([[77],{1077:(e,t,s)=>{s.r(t),s.d(t,{default:()=>w});s(71);var a=s(3673),r=s(2323);const n={class:"create-wallet"},c={class:"container"},i=(0,a.uE)('<h1 class="text-center text-desktop-left">Create wallet</h1><div class="stepper create-wallet__stepper flex-desktop-left"><div class="stepper__step stepper__step--complete"><div class="stepper__circle"></div><span class="stepper__text">Step 1</span></div><div class="stepper__step stepper__step--complete"><div class="stepper__circle"></div><span class="stepper__text">Step 2</span></div><div class="stepper__step stepper__step--active"><div class="stepper__circle"></div><span class="stepper__text">Step 3</span></div></div><div class="create-wallet__info"> Confirm your secret seedphrase by choosing words in a correct order: </div>',3),l={class:"seed-phrase create-wallet__seed-phrase"},o={class:"phrase-suggestions create-wallet__seed-phrase"},p=["onClick"],h=(0,a._)("a",{href:"/",class:"btn btn--transparent create-wallet__btn"},"Skip for now",-1);function d(e,t,s,d,m,_){return(0,a.wg)(),(0,a.iD)("div",null,[(0,a._)("main",n,[(0,a._)("div",c,[i,(0,a._)("div",l,[((0,a.wg)(!0),(0,a.iD)(a.HY,null,(0,a.Ko)(m.mnemonicPhraseCheck,((e,t)=>((0,a.wg)(),(0,a.iD)("div",{key:t,class:"seed-phrase__word"},(0,r.zw)(e),1)))),128))]),(0,a._)("div",o,[((0,a.wg)(!0),(0,a.iD)(a.HY,null,(0,a.Ko)(m.mnemonicPhraseRandom,((e,t)=>((0,a.wg)(),(0,a.iD)("div",{key:t,onClick:s=>_.checkWord(e,t),class:(0,r.C_)(["phrase-suggestions__word",{"phrase-suggestions__word--selected":e.check}])},(0,r.zw)(e.word),11,p)))),128))]),(0,a._)("button",{onClick:t[0]||(t[0]=(...e)=>_.clearTable&&_.clearTable(...e)),class:"btn btn--transparent create-wallet__btn"},"Clear"),(0,a._)("button",{onClick:t[1]||(t[1]=(...e)=>_.buttonNextStep&&_.buttonNextStep(...e)),class:(0,r.C_)(["btn btn--primary create-wallet__btn",{disabled:m.dasableNextStep}])},"Next",2),h])])])}const m={name:"CreateWalletStep3",data(){return{mnemonicPhraseCheck:[],mnemonicPhraseStore:[],mnemonicPhraseRandom:[],dasableNextStep:!0}},methods:{checkWord(e,t){e.check||(this.mnemonicPhraseRandom.map((t=>{t.word===e.word&&(t.check=!0)})),this.mnemonicPhraseCheck.push(e.word)),this.nextStep()},clearTable(){this.mnemonicPhraseCheck=[],this.mnemonicPhraseRandom.map((e=>{e.check=!1}))},nextStep(){this.mnemonicPhraseCheck.length===this.mnemonicPhraseStore.length&&(this.validation()?(this.dasableNextStep=!1,localStorage.setItem("confirmPhrase","true")):(console.error("Not walid phrase"),localStorage.setItem("confirmPhrase","false")))},validation(){for(let e in this.mnemonicPhraseStore)if(this.mnemonicPhraseStore[e]!==this.mnemonicPhraseCheck[e])return!1;return!0},buttonNextStep(){this.dasableNextStep||this.$router.push("/startscreen")}},mounted(){let e=localStorage.getItem("phrase");if(e){console.log("phraseStore  ",e),this.mnemonicPhraseStore=JSON.parse(e);let t=JSON.parse(e).sort((()=>Math.random()-.5));t.map((e=>{this.mnemonicPhraseRandom.push({word:e,check:!1})}))}}};var _=s(4260);const u=(0,_.Z)(m,[["render",d]]),w=u}}]);